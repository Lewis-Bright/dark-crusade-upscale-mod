(define (resize-image-keep-ratio basename new-width new-height)
	(let* (
			(filename1 (string-append basename "_Dirt.tga"))
			(filename2 (string-append basename "_Primary.tga"))
			(filename3 (string-append basename "_Secondary.tga"))
			(filename4 (string-append basename "_Trim.tga"))
			(filename5 (string-append basename "_Weapon.tga"))
			(filenames (list filename1 filename2 filename3 filename4 filename5))
			(currentFile "")
		)
		(while (not (null? filenames))
			(set! currentFile (car filenames))
			(resize_single_image currentFile new-width new-height)
			(set! filenames ( cdr filenames ) )
		)
	)
)

(define (resize_single_image filename new-width new-height)
	(let* (
			(image      (car (gimp-file-load RUN-NONINTERACTIVE filename "")))
			(drawable   (car (gimp-image-active-drawable image)))
			(cur-width  (car (gimp-image-width image)))
			(cur-height (car (gimp-image-height image)))
			(ratio      (min (/ new-width cur-width) (/ new-height cur-height)))
			(width      (* ratio cur-width))
			(height     (* ratio cur-height))
			(outputfile (string-append "new/" filename))
			)
	(gimp-image-scale image width height)
	(gimp-file-save   RUN-NONINTERACTIVE image drawable outputfile "")
	)
)